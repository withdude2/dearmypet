<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- mybatis 및 DB 설정 -->
	<bean name="SqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		c:sqlSessionFactory-ref="SqlSessionFactoryBean" />

	<!-- sqlsessionFactroybean 설정 -->
	<!--
		mapperLocations을 통해 sql매퍼파일들을 등록한다.
		대신 configLocation에 등록된 xml파일에서 <mappers><mapper resource="매퍼파일.xml">은 사용안한다.
	 -->
<!-- 		<property name="configLocation" value="classpath:/net/dearmypet/webapp/mybatis/mybatis-config.xml" /> -->
<!-- 		<property name="mapperLocations"  value="classpath:/net/dearmypet/webapp/mybatis/*Mapper.xml" /> -->
 	<bean name="SqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/spring/config/mybatis/mybatis-config.xml" />
		<property name="dataSource" ref="BasicDataSourceclass" />
		<property name="mapperLocations" value="/WEB-INF/spring/config/mybatis/*Mapper.xml"/>
	</bean>
	<!-- 
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/config/db.properties</value>
			</list>
		</property>
	</bean>
 -->
 
	<bean id="encryptorConfig" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="password" value="dear@mypet" />
	</bean>

	<bean id="encryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="encryptorConfig" />
	</bean>

	<bean id="propertyConfigurer" class="org.jasypt.spring3.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="encryptor" />
		<property name="locations">
			<list>
				<value>/WEB-INF/spring/config/db.properties</value>
			</list>
		</property>
	</bean>

 
	<!-- BasicDataSourceclass BEAN -->
		<!-- 
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/heroku_93dd468daebac93?useUnicode=true&amp;characterEncoding=utf8&amp;useTimezone=true&amp;serverTimezone=UTC&amp;connectTimeout=3000&amp;verifyServerCertificate=false&amp;useSSL=false" />
		 -->
 	<bean name="BasicDataSourceclass" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="maxTotal" value="50" />
	</bean>
	
	<!-- Heroku -->
	<!-- <bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
	</bean> -->
		
	<!-- // Heroku -->
 
	<!-- 한글처리 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" c:defaultCharset="UTF-8" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- bean anotation 스캔 -->
	<context:component-scan base-package="net.dearmypet.webapp" />
	<!-- 등록 페이지 연결 -->

	<!-- 메인 페이지 연결 -->
	<mvc:view-controller path="/main.dmp" view-name="main.tiles" />
	<!-- 회원가입 페이지 -->
	<mvc:view-controller path="/main_Sign_Up.dmp" view-name="register/main_Sign_Up.tiles" />
	<mvc:view-controller path="/main_Sign_Up_Result.dmp" view-name="register/main_Sign_Up_Result.tiles" />
	<!-- 동물정보 페이지 -->
	<mvc:view-controller path="/main_know.dmp" view-name="main_know.tiles" />
	<!-- 공지사항 페이지 -->
	<mvc:view-controller path="/main_notice.dmp" view-name="main_notice.tiles" />
	<!-- 회사정보 페이지 -->
	<mvc:view-controller path="/main_about.dmp" view-name="main_about.tiles" />
	
	<!-- 게시판 관련 페이지 연결 -->
	<mvc:view-controller path="/board/board.dmp" view-name="board/board.tiles" />
	<mvc:view-controller path="/board/missing.dmp" view-name="board/missing.tiles" />
	<mvc:view-controller path="/board/protect.dmp" view-name="board/protect.tiles" />
	<mvc:view-controller path="/board/protect_form.dmp" view-name="board/protect_form.tiles" />
	
	<!-- 금호씨 자료 -->
	<mvc:view-controller path="/main_survey.dmp" view-name="main_survey.tiles" />
	<mvc:view-controller path="/main_addNotice.dmp" view-name="main_addNotice.tiles" />
	<mvc:view-controller path="/main_report.dmp" view-name="main_report.tiles" />
	
	<!-- 진환씨 자료 admin페이지 dmptiles-->
	<mvc:view-controller path="/dmp_adoption.dmp" view-name="dmp_adoption.dmptiles" />
	<mvc:view-controller path="/dmp_board.dmp" view-name="dmp_board.dmptiles" />
	<mvc:view-controller path="/dmp_generalmember.dmp" view-name="dmp_generalmember.dmptiles" />
	<mvc:view-controller path="/dmp_groupmember.dmp" view-name="dmp_groupmember.dmptiles" />
	<mvc:view-controller path="/dmp_history.dmp" view-name="dmp_history.dmptiles" />
	<mvc:view-controller path="/dmp_parcel.dmp" view-name="dmp_parcel.dmptiles" />
	<mvc:view-controller path="/dmp_protectanilist.dmp" view-name="dmp_protectanilist.dmptiles" />
	<mvc:view-controller path="/dmp_protectgrouplist.dmp" view-name="dmp_protectgrouplist.dmptiles" />
	<mvc:view-controller path="/dmp_reply.dmp" view-name="dmp_reply.dmptiles" />
	
	<!-- <mvc:view-controller path="/Member/registerMember.dmp" view-name="Member/registerMember.tiles" /> -->
	<!-- test -->
	<mvc:view-controller path="/Member/memberList.dmp" view-name="Member/memberList.tiles" />

	<!-- exception 메시지 property -->
	<bean class="org.springframework.context.support.ResourceBundleMessageSource"
		name="messageSource" p:basename="net.dearmypet.webapp.exception.error_message" />
	
	<!-- post방식으로 이동시 캐시삭제 -->
	<mvc:interceptors>
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
	</mvc:interceptors>

	<!-- 프로젝트 관련 view 설정 -->
	<!-- View Resolver 관련 설정 -->
	<!-- 파일 업로드 -->
	<context:component-scan base-package="spring.fileup.controller"/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1" />
	<bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" p:order="2" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="4" />
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> -->
	<!--// 프로젝트 관련 view 설정 -->
	
	<mvc:annotation-driven />
	
	
<mvc:annotation-driven  content-negotiation-manager="contentNegotiationManager" /> 
 <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
      <property name="favorPathExtension" value="false" />
      <property name="favorParameter" value="true" />
      <property name="mediaTypes" >
           <value>
                json=application/json
                xml=application/xml
           </value>
      </property>
 </bean>


	<!-- Tiles 설정 -->
	<bean name="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/spring/config/tiles-defs.xml</value>
			</list>
		</property>
	</bean>

	<!-- Jackson JSON -->
	<!-- <bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" /> -->

	<!-- 파일 자원 관련 패스 설정 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 파일 업로드 -->
	<!-- <context:component-scan base-package="spring.fileup.controller"/>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" /> -->
	<!-- <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="1" />
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="2" /> -->
	
</beans>